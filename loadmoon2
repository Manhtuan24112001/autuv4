fask = task
local HttpService = game:GetService("HttpService")

-- ƒê·ªçc file helpfullmoon.json
local AllJobIds = {}
local success = pcall(function()
    AllJobIds = HttpService:JSONDecode(readfile("helpfullmoon.json"))
end)

if not success then
    print("‚ùå Failed to load helpfullmoon.json or file is empty.")
    return
end

local fullMoonFound = false -- ƒê·ªÉ theo d√µi xem Full Moon ƒë√£ ƒë∆∞·ª£c t√¨m th·∫•y ch∆∞a

-- L·∫•y server t·ª´ helpfullmoon.json
function TPReturner()
    if #AllJobIds == 0 then
        print("‚ùå No Full Moon servers found in helpfullmoon.json.")
        return
    end

    for _, server in pairs(AllJobIds) do
        local jobId = tostring(server.jobId)
        local placeId = server.placeId
        local timestamp = server.timestamp
        local currentTime = os.time()

        -- Ki·ªÉm tra n·∫øu ƒë√£ l√¢u qu√° th√¨ b·ªè qua
        if currentTime - timestamp < 3600 then -- 1 hour window
            local TeleportService = game:GetService("TeleportService")
            local player = game.Players.LocalPlayer
            TeleportService:TeleportToPlaceInstance(placeId, jobId, player)
            print("üîî Teleporting to Full Moon server: " .. jobId)
            fullMoonFound = true -- ƒê√°nh d·∫•u ƒë√£ t√¨m th·∫•y Full Moon, kh√¥ng teleport n·ªØa
            return
        else
            print("‚ùå Full Moon server is outdated (over 1 hour). Skipping...")
        end
    end
end

-- L·∫•y pha m·∫∑t trƒÉng
local function GetMoonPhase()
    local moonTextures = {
        ["http://www.roblox.com/asset/?id=9709149431"] = "Full Moon üåï",
        ["http://www.roblox.com/asset/?id=9709149052"] = "87,5%",
        ["http://www.roblox.com/asset/?id=9709143733"] = "75%",
        ["http://www.roblox.com/asset/?id=9709150401"] = "62,5%",
        ["http://www.roblox.com/asset/?id=9709135895"] = "50%",
        ["http://www.roblox.com/asset/?id=9709139597"] = "37,5%",
        ["http://www.roblox.com/asset/?id=9709150086"] = "25%",
        ["http://www.roblox.com/asset/?id=9709149680"] = "12,5%"
    }

    local textureId = game:GetService("Lighting").Sky.MoonTextureId

    if moonTextures[textureId] then
        print("üåô Current Moon Phase: " .. moonTextures[textureId])
        return moonTextures[textureId]
    else
        print("üåô Unknown Moon Phase")
        return nil
    end
end

-- N·∫øu kh√¥ng ph·∫£i Full Moon
local function Hop()
    if not fullMoonFound then
        print("‚ùå Not Full Moon. Hopping...")
        pcall(function()
            TPReturner()
        end)
    end
end

-- H√†m ch√≠nh
function Teleport()
    while fask.wait(5) do
        local currentMoonPhase = GetMoonPhase()

        if currentMoonPhase ~= "Full Moon üåï" then
            if not fullMoonFound then
                TPReturner() -- T·ª± ƒë·ªông teleport n·∫øu Full Moon
            end
        else
            Hop() -- N·∫øu kh√¥ng ph·∫£i Full Moon, t√¨m server m·ªõi
        end
    end
end

Teleport()
