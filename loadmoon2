fask = task
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

-- ƒê·ªçc file helpfullmoon.json
local AllJobIds = {}
local success = pcall(function()
    AllJobIds = HttpService:JSONDecode(readfile("helpfullmoon.json"))
end)

if not success then
    print("‚ùå Failed to load helpfullmoon.json or file is empty.")
    return
end

-- Ki·ªÉm tra xem player 'xitrum353' c√≥ trong server kh√¥ng
local function isPlayerInServer(playerName)
    for _, player in pairs(Players:GetPlayers()) do
        if player.Name == playerName then
            return true
        end
    end
    return false
end

-- L·∫•y server t·ª´ helpfullmoon.json
function TPReturner()
    if #AllJobIds == 0 then
        print("‚ùå No Full Moon servers found in helpfullmoon.json.")
        return
    end

    for _, server in pairs(AllJobIds) do
        local jobId = tostring(server.jobId)
        local placeId = server.placeId
        local timestamp = server.timestamp
        local currentTime = os.time()

        -- Ki·ªÉm tra n·∫øu ƒë√£ l√¢u qu√° th√¨ b·ªè qua
        if currentTime - timestamp < 3600 then -- 1 hour window
            -- Ki·ªÉm tra n·∫øu player 'xitrum353' c√≥ trong server
            local playerFound = isPlayerInServer("xitrum353")

            -- N·∫øu player 'xitrum353' kh√¥ng c√≥ trong server, b·ªè qua logic Full Moon v√† nh·∫£y server kh√°c
            if not playerFound then
                print("‚ùå Player 'xitrum353' not found in the server. Hopping...")
                Hop() -- Skip Full Moon and hop to a new server
                return
            end

            -- N·∫øu c√≥ player 'xitrum353', √°p d·ª•ng logic Full Moon
            local TeleportService = game:GetService("TeleportService")
            local player = game.Players.LocalPlayer
            TeleportService:TeleportToPlaceInstance(placeId, jobId, player)
            print("üîî Teleporting to Full Moon server: " .. jobId)
            return -- Teleported, stop the function
        else
            print("‚ùå Full Moon server is outdated (over 1 hour). Skipping...")
        end
    end
end

local function GetMoonPhase()
    local moonTextures = {
        ["http://www.roblox.com/asset/?id=9709149431"] = "Full Moon üåï",
        ["http://www.roblox.com/asset/?id=9709149052"] = "87,5%",
        ["http://www.roblox.com/asset/?id=9709143733"] = "75%",
        ["http://www.roblox.com/asset/?id=9709150401"] = "62,5%",
        ["http://www.roblox.com/asset/?id=9709135895"] = "50%",
        ["http://www.roblox.com/asset/?id=9709139597"] = "37,5%",
        ["http://www.roblox.com/asset/?id=9709150086"] = "25%",
        ["http://www.roblox.com/asset/?id=9709149680"] = "12,5%"
    }

    local textureId = game:GetService("Lighting").Sky.MoonTextureId

    if moonTextures[textureId] then
        print("üåô Current Moon Phase: " .. moonTextures[textureId])
        return moonTextures[textureId]
    else
        print("üåô Unknown Moon Phase")
        return nil
    end
end

-- N·∫øu kh√¥ng ph·∫£i Full Moon
local function Hop()
    print("‚ùå Not Full Moon. Hopping...")
    pcall(function()
        TPReturner()
    end)
end

-- Qu√©t li√™n t·ª•c xem c√≥ player 'xitrum353' trong server kh√¥ng
while true do
    wait(5)  -- Qu√©t m·ªói 5 gi√¢y
    local currentMoonPhase = GetMoonPhase()

    if currentMoonPhase == "Full Moon üåï" then
        -- Ki·ªÉm tra l·∫°i n·∫øu player 'xitrum353' c√≥ trong server kh√¥ng
        if isPlayerInServer("xitrum353") then
            SaveFullMoonServer() -- N·∫øu c√≥ player 'xitrum353' v√† l√† Full Moon, l∆∞u server
        else
            print("‚ùå Player 'xitrum353' not found. Hopping to another server...")
            Hop() -- N·∫øu kh√¥ng c√≥ player 'xitrum353', nh·∫£y server kh√°c
        end
    else
        Hop() -- N·∫øu kh√¥ng ph·∫£i Full Moon, nh·∫£y server kh√°c
    end
end
